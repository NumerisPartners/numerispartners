// Mixins
@use "_variables.scss" as vars;

// Media queries

@mixin margin-0 {
  margin: 0;
}
@mixin sm {
  @media (min-width: vars.$breakpoint-sm) {
    @content;
  }
}

@mixin md {
  @media (min-width: vars.$breakpoint-md) {
    @content;
  }
}

@mixin lg {
  @media (min-width: vars.$breakpoint-lg) {
    @content;
  }
}

@mixin xl {
  @media (min-width: vars.$breakpoint-xl) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: vars.$breakpoint-2xl) {
    @content;
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid
@mixin grid($columns: 1, $gap: vars.$spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Transitions
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Button styles
@mixin button-base {
  display: inline-block;
  padding: vars.$spacing-sm vars.$spacing-lg;
  font-weight: vars.$font-weight-medium;
  text-align: center;
  border-radius: vars.$border-radius-md;
  cursor: pointer;
  @include transition;
}

@mixin button-primary {
  @include button-base;
  background-color: vars.$primary-color;
  color: white;
  
  &:hover {
    background-color: vars.$primary-color-dark;
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: white;
  color: vars.$primary-color;
  border: 1px solid vars.$primary-color;
  
  &:hover {
    background-color: rgba(vars.$primary-color, 0.05);
  }
}

// Box shadow
@mixin shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: vars.$shadow-sm;
  } @else if $level == 'md' {
    box-shadow: vars.$shadow-md;
  } @else if $level == 'lg' {
    box-shadow: vars.$shadow-lg;
  }
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
